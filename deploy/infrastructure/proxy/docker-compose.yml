version: '3.8'

services:
  # Database for Nginx Proxy Manager
  db:
    image: 'mariadb:10.6.16'
    container_name: npm-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: "npm"
      MYSQL_DATABASE: "npm"
      MYSQL_USER: "npm"
      MYSQL_PASSWORD: "npm"
    volumes:
      - ./mysql:/var/lib/mysql
    networks:
      - proxy-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-pnpm"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci

  # Nginx Proxy Manager
  npm:
    image: 'jc21/nginx-proxy-manager:2.10.3'
    container_name: nginx-proxy-manager
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    ports:
      - '0.0.0.0:80:80'
      - '0.0.0.0:443:443'
      - '0.0.0.0:81:81'
    environment:
      # Database connection
      DB_MYSQL_HOST: "db"
      DB_MYSQL_PORT: 3306
      DB_MYSQL_USER: "npm"
      DB_MYSQL_PASSWORD: "npm"
      DB_MYSQL_NAME: "npm"
      # Disable HSTS by default - prevents HTTPS redirect lockout
      DISABLE_HSTS: "true"
      # Disable forced SSL - prevents lockout
      DISABLE_FORCED_SSL: "true"
      # Force HTTP for admin interface
      FORCE_HTTP: "true"
    volumes:
      - ./data:/data
      - ./letsencrypt:/etc/letsencrypt
    networks:
      - proxy-network
    healthcheck:
      test: ["CMD-SHELL", "curl -s --fail http://localhost:81/ping || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 90s

  # Portainer - Container Management
  portainer:
    image: portainer/portainer-ce:2.19.4
    container_name: portainer
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - portainer_data:/data
    ports:
      - "0.0.0.0:9000:9000"
    networks:
      - proxy-network
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:9000/ || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s

networks:
  proxy-network:
    name: proxy-network
    external: true

volumes:
  portainer_data:
    name: portainer_data
