version: '3.8'

services:
  postgres-dev:
    image: postgres:12.20-alpine3.20
    container_name: pharmacyhub-postgres-dev
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=pharmacyhub_dev
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${DEV_DB_PASSWORD}
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - ${CRM_BASE_PATH}/dev/data/backups/postgres:/backups
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - dev-network
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  redis-dev:
    image: redis:7.2-alpine
    container_name: pharmacyhub-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_data_dev:/data
    command: redis-server --appendonly yes --requirepass ${DEV_REDIS_PASSWORD}
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "${DEV_REDIS_PASSWORD}", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - dev-network
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  keycloak-dev:
    image: quay.io/keycloak/keycloak:25.0.2
    container_name: pharmacyhub-keycloak-dev
    environment:
      - KEYCLOAK_ADMIN=${DEV_KEYCLOAK_ADMIN_USER}
      - KEYCLOAK_ADMIN_PASSWORD=${DEV_KEYCLOAK_ADMIN_PASSWORD}
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://postgres-dev:5432/pharmacyhub_dev
      - KC_DB_USERNAME=postgres
      - KC_DB_PASSWORD=${DEV_DB_PASSWORD}
      - KC_HOSTNAME=${DEV_KEYCLOAK_HOST}
      - KC_PROXY=edge
      - KC_PROXY_ADDRESS_FORWARDING=true
    volumes:
      - ../../../themes:/opt/keycloak/providers
      - keycloak_data_dev:/opt/keycloak/data
    command:
      - "start"
      - "--spi-theme-static-max-age=-1"
      - "--spi-theme-cache-themes=false"
      - "--spi-theme-cache-templates=false"
    networks:
      - dev-network
      - proxy-network
    depends_on:
      postgres-dev:
        condition: service_healthy
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  pharmacyhub-backend-dev:
    image: ${DEV_BACKEND_DOCKER_IMAGE}
    container_name: pharmacyhub-backend-dev
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SERVER_PORT=${DEV_SERVER_PORT}
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-dev:5432/pharmacyhub_dev
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=${DEV_DB_PASSWORD}
      - KEYCLOAK_AUTH_SERVER_URL=http://keycloak-dev:8080
      - KEYCLOAK_REALM=${DEV_KEYCLOAK_REALM}
      - KEYCLOAK_RESOURCE=${DEV_KEYCLOAK_CLIENT_ID}
      - KEYCLOAK_CREDENTIALS_SECRET=${DEV_KEYCLOAK_CLIENT_SECRET}
      - REDIS_HOST=redis-dev
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${DEV_REDIS_PASSWORD}
    volumes:
      - ${CRM_BASE_PATH}/dev/backend/logs:/app/logs
    networks:
      - dev-network
      - proxy-network
    depends_on:
      postgres-dev:
        condition: service_healthy
      keycloak-dev:
        condition: service_started
      redis-dev:
        condition: service_healthy
    restart: always
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  dev-network:
    name: pharmacyhub-dev-network
    driver: bridge
  proxy-network:
    name: proxy-network
    external: true

volumes:
  postgres_data_dev:
    name: pharmacyhub_postgres_data_dev
    driver: local
    driver_opts:
      type: none
      device: ${CRM_BASE_PATH}/dev/data/postgres
      o: bind
  keycloak_data_dev:
    name: pharmacyhub-keycloak-data-dev
    driver: local
    driver_opts:
      type: none
      device: ${CRM_BASE_PATH}/dev/data/keycloak
      o: bind
  redis_data_dev:
    name: pharmacyhub-redis-data-dev
    driver: local
    driver_opts:
      type: none
      device: ${CRM_BASE_PATH}/dev/data/redis
      o: bind
